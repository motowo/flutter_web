version: '3.8'

services:
  db:
    image: postgres:13-alpine
    container_name: card_postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432" 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./card_project_backend
    container_name: card_django_backend
    volumes:
      - media_files:/app/media
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-your_default_secret_key_here_change_me}
      - DEBUG=${DEBUG:-1}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,backend}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3001,http://127.0.0.1:3001} # Assuming frontend runs on port 3001
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./card_project_frontend
    container_name: card_react_frontend
    ports:
      - "3001:80" 
    depends_on:
      - backend

volumes:
  postgres_data:
  media_files:
