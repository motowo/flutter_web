// import 'package:firebase_auth/firebase_auth.dart';
// import 'package:firebase_core/firebase_core.dart';
// import 'package:flutter/material.dart';
// // ignore: depend_on_referenced_packages
// import 'package:flutter_web_plugins/url_strategy.dart';
// import 'package:provider/provider.dart';

// import 'firebase_options.dart';

// import 'pages/login_page.dart';
// import 'pages/list_page.dart';
// import 'pages/card_detail_page.dart';

// import 'package:simple_logger/simple_logger.dart';

// final logger = SimpleLogger()
//   ..setLevel(
//     // すべてログ出力する
//     Level.ALL,
//     // ログ出力した場所を出力する
//     includeCallerInfo: true,
//   );

// Future<void> main() async {
//   WidgetsFlutterBinding.ensureInitialized();
//   // Firebase初期化
//   await Firebase.initializeApp(
//     options: DefaultFirebaseOptions.currentPlatform,
//   );
//   usePathUrlStrategy();
//   runApp(const MyApp());
// }

// class MyApp extends StatelessWidget {
//   const MyApp({super.key});

//   // This widget is the root of your application.
//   @override
//   Widget build(BuildContext context) {
//     return MaterialApp(
//       title: 'Flutter Demo',
//       theme: ThemeData(
//         primarySwatch: Colors.blue,
//       ),
//       home: const LoginPage(),
//       initialRoute: '/',
//       routes: <String, WidgetBuilder>{
//         '/login': (BuildContext context) => const LoginPage(),
//         '/list': (BuildContext context) => const ListPage(),
//         '/card_detail': (BuildContext context) => const CardDetailPage(),
//       },
//     );
//   }
// }

// class UserState extends ChangeNotifier {
//   late User user;
//   void setUser(User currentUser) {
//     user = currentUser;
//     notifyListeners();
//   }
// }

// class LoginCheck extends StatefulWidget {
//   const LoginCheck({super.key});

//   @override
//   State createState() => _LoginCheckState();
// }

// class _LoginCheckState extends State<LoginCheck> {
//   //ログイン状態のチェック(非同期で行う)
//   void checkUser() async {
//     final currentUser = FirebaseAuth.instance.currentUser;
//     final userState = Provider.of<UserState>(context, listen: false);
//     logger.info(currentUser);
//     if (currentUser == null) {
//       Navigator.of(context).pushReplacementNamed("/login");
//     } else {
//       userState.setUser(currentUser);
//       Navigator.of(context).pushReplacementNamed("/list");
//     }
//   }

//   @override
//   void initState() {
//     super.initState();
//     checkUser();
//   }

//   //ログイン状態のチェック時はこの画面が表示される
//   //チェック終了後にホーム or ログインページに遷移する
//   @override
//   Widget build(BuildContext context) {
//     return const Scaffold(
//       body: Center(
//         child: Text("Loading..."),
//       ),
//     );
//   }
// }
